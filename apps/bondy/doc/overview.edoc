# API GATEWAY & NETWORKING PLATFORM FOR DISTRIBUTED AND MICROSERVICES APPLICATIONS

BONDY is an open source networking platform for distributed and MicroServices and IoT applications written in Erlang, implementing primarily the open Web Application Messaging Protocol (WAMP) offering both Publish and Subscribe (PubSub) and routed Remote Procedure Calls (RPC).

## Compiling Bondy

```bash
cd bondy
rebar3 as dev release
```

## Running Bondy

```bash
_build/dev/rel/bondy/bin/bondy console
```

## Configuration
On the first startup Bondy creates the root realm called "com.leapsight.bondy" and user with username `admin` and password `bondy` with local network access.

##Â Create a Realm
In order tu use `bondy` you will first need a _realm_ in place:

```bash
curl -X "POST" "http://localhost:18081/realms" \
     -H "Content-Type: application/json; charset=utf-8" \
     -H "Accept: application/json; charset=utf-8" \
     -d $'{
  "uri": "com.myapi"
}'
```

This will create a new realm `com.myapi` ready to use.

## Add an API Client

If you want to define your own `client_id` and `client_secret` for a realm called `com.myapi` do:
```bash
curl -X "POST" "http://localhost:18081/realms/com.myapi/clients" \
     -H "Content-Type: application/json; charset=utf-8" \
     -H "Accept: application/json; charset=utf-8" \
     -d $'{
  "client_id": "1234",
  "client_secret": "4567",
  "meta" : {"description": "A test client"}
}'
```

To generate random `client_id` and `client_secret` do:
```bash
curl -X "POST" "http://localhost:18081/realms/com.myapi/clients" \
     -H "Content-Type: application/json; charset=utf-8" \
     -H "Accept: application/json; charset=utf-8" \
     -d $'{
  "description": "A test client"
}'
```

An example return will be the following JSON object:

```json
{
    "client_id": "6aoztZ9SUM65RZhBiNQXmEWbCJgWCdoBeYVPB4KSwgE8eEK3",
    "client_secret": "RdfuJNEEhS6eUSxDMcdIrLZcUz4NMgg49ImZ6XWwNDyId0LCADQkjsNiGh0nm8r2",
    "description": "A test client"
}
```

## Disable Realm Security
Do this if your wamp client does not support TICKET based or WAMPCRA authentication methods.

```bash
curl -X "DELETE" "http://localhost:18081/realms/com.myapi/security_enabled" \
     -H "Content-Type: application/json; charset=utf-8" \
     -H "Accept: application/json; charset=utf-8"
```

## Add a Resource Owner (end-user)
```bash
curl -X "POST" "http://localhost:18081/realms/com.myapi/resource_owners" \
     -H "Content-Type: application/json; charset=utf-8" \
     -H "Accept: application/json; charset=utf-8" \
     -d $'{
  "username": "ale",
  "password": "1234",
  "meta" :{
    "user_id": 2,
    "account_id": 1
  }
}'
```

## Update a Resource Owner (end-user)
```bash
curl -X "PUT" "http://localhost:18081/realms/com.myapi/resource_owners" \
     -H "Content-Type: application/json; charset=utf-8" \
     -H "Accept: application/json; charset=utf-8" \
     -d $'{
  "username": "ale",
  "password": "1234",
  "meta" :{
    "user_id": 2,
    "account_id": 1
  }
}'
```

## Adding an Api Spec
```bash
curl -X "POST" "http://localhost:18081/services/load_api_spec" \
     -H "Content-Type: application/json; charset=utf-8" \
     -H "Accept: application/json; charset=utf-8" \
     --data-binary "@/Volumes/Lojack/magenta_bondy_specs/magenta_api.bondy.json"
```

