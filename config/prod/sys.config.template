[
    {sasl, [{sasl_error_logger, false}]},

    {os_mon, [
        {system_memory_high_watermark, 0.60}
    ]},
    {kernel, [
        {logger_level, info},
        {logger, [
            {handler, default, logger_std_h, #{
                formatter => {
                    bondy_logger_formatter, #{
                        % map_depth => -1,
                        map_depth => 3,
                        % term_depth => undefined,
                        term_depth => 50,
                        time_offset => 0,
                        time_designator => $T,
                        colored => true,
                        colored_debug =>     "\e[0;38m",
                        colored_info =>      "\e[1;37m",
                        colored_notice =>    "\e[1;36m",
                        colored_warning =>   "\e[1;33m",
                        colored_error =>     "\e[1;31m",
                        colored_critical =>  "\e[1;35m",
                        colored_alert =>     "\e[1;45m",
                        colored_emergency => "\e[1;41;1m",
                        template => [
                            colored_start,
                            "when=", time,
                            " level=", level,
                            {pid, [" pid=", pid], ""},
                            " at=", mfa, ":", line,
                            {
                                {msg, description},
                                [" description=", description],
                                ""
                            },
                            colored_end,
                            {
                                {msg, reason},
                                [" reason=", reason],
                                ""
                            },
                            {id, [" id=", id], ""},
                            {parent_id, [" parent_id=", parent_id], ""},
                            {correlation_id, [" correlation_id=", correlation_id], ""},
                            {node, [" node=", node], ""},
                            {router_vsn, [" router_vsn=", router_vsn], ""},
                            {realm, [" realm=", realm], ""},
                            {session_id, [" session_id=", session_id], ""},
                            {protocol, [" protocol=", protocol], ""},
                            {transport, [" transport=", transport], ""},
                            {peername, [" peername=", peername], ""},
                            " ",
                            msg,
                            "\n"
                        ]
                    }
                },
                level => info,
                filter_default => stop,
                filters => [
                    {remote_gl,
                        {fun logger_filters:remote_gl/2, stop}
                    },
                    {domain,
                        {fun logger_filters:domain/2, {stop, equal, [sasl]}}
                    },
                    {domain,
                        {fun logger_filters:domain/2, {log, super, [otp]}}
                    },
                    % {domain,
                    %     {fun logger_filters:domain/2, {log, super, [otp, sasl]}}
                    % },
                    {no_domain,
                        {fun logger_filters:domain/2, {log, undefined, []}}
                    }
                ],
                config => #{
                    burst_limit_enable => true,
                    burst_limit_max_count => 500,
                    burst_limit_window_time => 1000,
                    drop_mode_qlen => 200,
                    filesync_repeat_interval => no_repeat,
                    flush_qlen => 1000,
                    overload_kill_enable => false,
                    overload_kill_mem_size => 3000000,
                    overload_kill_qlen => 20000,
                    overload_kill_restart_after => 5000,
                    sync_mode_qlen => 10,
                    type => standard_io
                }
            }}
        ]}
    ]},
    %% This path is required so that we include the configuration generated by
    %% cuttlefish based on the users's bondy.conf file
    "releases/{{release_version}}/generated/user_defined.config"
].
